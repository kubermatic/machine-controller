apiVersion: "cluster.k8s.io/v1alpha1"
kind: MachineDeployment
metadata:
  name: << MACHINE_NAME >>
  namespace: kube-system
spec:
  replicas: 1
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      name: << MACHINE_NAME >>
  template:
    metadata:
      labels:
        name: << MACHINE_NAME >>
    spec:
      providerSpec:
        value:
          sshPublicKeys:
            - "<< YOUR_PUBLIC_KEY >>"
          cloudProvider: "vsphere"
          cloudProviderSpec:
            templateVMName: '<< OS_Image_Template >>'
            username: '<< VSPHERE_USERNAME >>'
            vsphereURL: '<< VSPHERE_ADDRESS >>'
            datacenter: 'dc-1'
            folder: '/dc-1/vm/e2e-tests'
            password: << VSPHERE_PASSWORD >>
            # example: 'https://your-vcenter:8443'. '/sdk' gets appended automatically
            datastoreCluster: 'dsc-1'
            cpus: 2
            MemoryMB: 2048
            diskSizeGB: << DISK_SIZE >>
          operatingSystem: "<< OS_NAME >>"
          operatingSystemSpec:
            distUpgradeOnBoot: false
            disableAutoUpdate: true
            attachSubscription: false
            # 'rhelSubscriptionManagerUser' is only used for rhel os and can be set via env var `RHEL_SUBSCRIPTION_MANAGER_USER`
            rhelSubscriptionManagerUser: "<< RHEL_SUBSCRIPTION_MANAGER_USER >>"
            # 'rhelSubscriptionManagerPassword' is only used for rhel os and can be set via env var `RHEL_SUBSCRIPTION_MANAGER_PASSWORD`
            rhelSubscriptionManagerPassword: "<< RHEL_SUBSCRIPTION_MANAGER_PASSWORD >>"
            # 'rhsmOfflineToken' if it was provided red hat systems subscriptions will be removed upon machines deletions, and if wasn't
            # provided the rhsm will be disabled and any created subscription won't be removed automatically
            rhsmOfflineToken: "<< REDHAT_SUBSCRIPTIONS_OFFLINE_TOKEN >>"
      versions:
        kubelet: "<< KUBERNETES_VERSION >>"
