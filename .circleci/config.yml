version: 2
jobs:
  checkout_code:
    docker:
      - image: circleci/golang:1.9
    working_directory: /go/src/github.com/kubermatic/machine-controller
    steps:
      - checkout
      - save_cache:
          key: repo-{{ .Environment.CIRCLE_SHA1 }}
          paths:
            - /go/src/github.com/kubermatic/machine-controller

  check-dependencies:
    docker:
      - image: circleci/golang:1.9
    working_directory: /go/src/github.com/kubermatic/machine-controller
    steps:
      - restore_cache:
          key: repo-{{ .Environment.CIRCLE_SHA1 }}
      - run: go get -u github.com/golang/dep/cmd/dep
      - run: dep status

  test:
    docker:
      - image: docker:stable
    working_directory: /go/src/github.com/kubermatic/machine-controller
    steps:
      - restore_cache:
          key: repo-{{ .Environment.CIRCLE_SHA1 }}
      - setup_remote_docker
      - run: apk update && apk add make bash git
      - run: |
          set -e
          docker create -v /go/src/github.com/kubermatic/machine-controller --name vol-container alpine /bin/true
          docker cp . vol-container:/go/src/github.com/kubermatic/machine-controller/
          export USE_VOLUME_CONTAINER=true && make test-unit-nodep

  build:
    docker:
      - image: docker:stable
    working_directory: /go/src/github.com/kubermatic/machine-controller
    steps:
      - restore_cache:
          key: repo-{{ .Environment.CIRCLE_SHA1 }}
      - setup_remote_docker
      - run: apk update && apk add make bash git
      - run: |
          set -e
          docker create -v /go/src/github.com/kubermatic/machine-controller --name vol-container alpine /bin/true
          docker cp . vol-container:/go/src/github.com/kubermatic/machine-controller/
          export USE_VOLUME_CONTAINER=true && make machine-controller-nodep
          docker cp vol-container:/go/src/github.com/kubermatic/machine-controller/machine-controller .
      - save_cache:
          key: machine-controller-{{ .Revision }}
          paths:
            - machine-controller
  verify-tool:
    docker:
      - image: golang:1.10.0
    working_directory: /go/src/github.com/kubermatic/machine-controller/test/tools/verify
    steps:
      - restore_cache:
          key: repo-{{ .Environment.CIRCLE_SHA1 }}
      - run: make verify
      - save_cache:
          key: verify-tool-{{ .Revision }}
          paths:
            - /go/src/github.com/kubermatic/machine-controller/test/tools/verify/verify
  end-to-end:
    docker:
      - image: alpine:latest
    working_directory: /go/src/github.com/kubermatic/machine-controller
    steps:
      - run:
          name: Install dependencies
          command: apk update && apk add make bash git openssh-client jq rsync curl
      - restore_cache:
          key: repo-{{ .Environment.CIRCLE_SHA1 }}
      - restore_cache:
          key: machine-controller-{{ .Revision }}
      - restore_cache:
          key: verify-tool-{{ .Revision }}
      - run:
          name: Generate ssh keypair
          command: ssh-keygen -f $HOME/.ssh/id_rsa -P ''
      - run:
          name: Create environment at cloud provider
          command: make -C test/tools/integration apply
      - run:
          name: Create kubeadm cluster and install machine-controller onto it
          command: ./test/tools/integration/provision_master.sh
      - run:
          name:  Run E2E test
          command: ./test/tools/integration/run_e2e_tests.sh
          no_output_timeout: 15m
      - run:
          name: Clean up
          command: make -C test/tools/integration destroy
          when: always

  publish:
    docker:
      - image: docker:stable
    working_directory: /go/src/github.com/kubermatic/machine-controller
    steps:
      - restore_cache:
          key: repo-{{ .Environment.CIRCLE_SHA1 }}
      - restore_cache:
          key: machine-controller-{{ .Revision }}
      - setup_remote_docker
      - run: apk update && apk add make bash git
      - run: |
          set -e
          export GIT_TAG=$CIRCLE_TAG
          docker login -u "${DOCKERHUB_USER}" -p "${DOCKERHUB_PASS}"
          make docker-image-nodep

workflows:
  version: 2
  build:
    jobs:
      - checkout_code:
          filters:
            tags:
              only: /v.*/
      - check-dependencies:
          requires:
            - checkout_code
          filters:
            tags:
              only: /v.*/
      - test:
          requires:
            - check-dependencies
          filters:
            tags:
              only: /v.*/
      - build:
          requires:
            - check-dependencies
          filters:
            tags:
              only: /v.*/
      - verify-tool:
          requires:
            - check-dependencies
          filters:
            tags:
              only: /v.*/
      - end-to-end:
          requires:
            - check-dependencies
            - test
            - build
            - verify-tool
          filters:
            tags:
              only: /v.*/
      - publish:
          requires:
            - end-to-end
          filters:
            branches:
              only:
                - master
            tags:
              only: /v.*/
