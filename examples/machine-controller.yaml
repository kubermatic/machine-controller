apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: machines.cluster.k8s.io
  labels:
    local-testing: "true"
spec:
  group: cluster.k8s.io
  version: v1alpha1
  scope: Namespaced
  names:
    kind: Machine
    plural: machines
  additionalPrinterColumns:
  - name: Provider
    type: string
    JSONPath: .spec.providerSpec.value.cloudProvider
  - name: OS
    type: string
    JSONPath: .spec.providerSpec.value.operatingSystem
  - name: Address
    type: string
    JSONPath: .status.addresses[0].address
  - name: Age
    type: date
    JSONPath: .metadata.creationTimestamp

---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: machinesets.cluster.k8s.io
  labels:
    local-testing: "true"
spec:
  group: cluster.k8s.io
  version: v1alpha1
  scope: Namespaced
  names:
    kind: MachineSet
    plural: machinesets
  subresources:
     # status enables the status subresource.
     status: {}
  additionalPrinterColumns:
  - name: Replicas
    type: integer
    JSONPath: .spec.replicas
  - name: Provider
    type: string
    JSONPath: .spec.template.spec.providerSpec.value.cloudProvider
  - name: OS
    type: string
    JSONPath: .spec.template.spec.providerSpec.value.operatingSystem
  - name: Age
    type: date
    JSONPath: .metadata.creationTimestamp
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: machinedeployments.cluster.k8s.io
  labels:
    local-testing: "true"
spec:
  group: cluster.k8s.io
  version: v1alpha1
  scope: Namespaced
  names:
    kind: MachineDeployment
    plural: machinedeployments
  subresources:
     # status enables the status subresource.
     status: {}
  additionalPrinterColumns:
  - name: Replicas
    type: integer
    JSONPath: .spec.replicas
  - name: Provider
    type: string
    JSONPath: .spec.template.spec.providerSpec.value.cloudProvider
  - name: OS
    type: string
    JSONPath: .spec.template.spec.providerSpec.value.operatingSystem
  - name: Age
    type: date
    JSONPath: .metadata.creationTimestamp
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: clusters.cluster.k8s.io
  labels:
    local-testing: "true"
spec:
  group: cluster.k8s.io
  version: v1alpha1
  scope: Namespaced
  names:
    kind: Cluster
    plural: clusters
  subresources:
     # status enables the status subresource.
     status: {}
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRoleBinding
metadata:
  name: machine-controller:kubelet-bootstrap
  labels:
    local-testing: "true"
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: system:node-bootstrapper
subjects:
- apiGroup: rbac.authorization.k8s.io
  kind: Group
  name: system:bootstrappers:machine-controller:default-node-token
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: machine-controller:node-autoapprove-bootstrap
  labels:
    local-testing: "true"
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: system:certificates.k8s.io:certificatesigningrequests:nodeclient
subjects:
- apiGroup: rbac.authorization.k8s.io
  kind: Group
  name: system:bootstrappers:machine-controller:default-node-token
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: machine-controller
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      app: machine-controller
  template:
    metadata:
      annotations:
        "prometheus.io/scrape": "true"
        "prometheus.io/port": "8085"
        "prometheus.io/path": "/metrics"
      labels:
        app: machine-controller
    spec:
      serviceAccountName: machine-controller
      containers:
        - image: kubermatic/machine-controller:latest
          imagePullPolicy: IfNotPresent
          name: machine-controller
          command:
            - /usr/local/bin/machine-controller
            - -logtostderr
            - -v=3
            - -worker-count=5
            - -cluster-dns=10.10.10.10
            - -internal-listen-address=0.0.0.0:8085
            # Machines that fail to join the cluster within this timeout and
            # are owned by a MachineSet will get deleted so the MachineSet
            # controller re-creates them
            - -join-cluster-timeout=15m
          ports:
          - containerPort: 8085
          livenessProbe:
            httpGet:
              path: /live
              port: 8085
            initialDelaySeconds: 5
            periodSeconds: 5
          readinessProbe:
            httpGet:
              path: /ready
              port: 8085
            periodSeconds: 5
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: machine-controller-webhook
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      app: machine-controller-webhook
  template:
    metadata:
      labels:
        app: machine-controller-webhook
    spec:
      serviceAccountName: machine-controller
      containers:
        - image: kubermatic/machine-controller:latest
          imagePullPolicy: IfNotPresent
          name: webhook
          command:
            - /usr/local/bin/webhook
            - -logtostderr
            - -v=6
            - -listen-address=0.0.0.0:9876
          volumeMounts:
            - name: machine-controller-admission-cert
              mountPath: /tmp/cert
          livenessProbe:
            httpGet:
              path: /healthz
              port: 9876
              scheme: HTTPS
            initialDelaySeconds: 5
            periodSeconds: 5
          readinessProbe:
            httpGet:
              path: /healthz
              port: 9876
              scheme: HTTPS
            periodSeconds: 5
      volumes:
        - name: machine-controller-admission-cert
          secret:
            secretName: machine-controller-admission-cert
---
apiVersion: v1
kind: Secret
metadata:
  name: machine-controller-admission-cert
  namespace: kube-system
data:
  "cert.pem": __admission_cert__
  "key.pem": __admission_key__
---
apiVersion: v1
kind: Service
metadata:
  name: machine-controller-webhook
  namespace: kube-system
spec:
  ports:
  - name: 443-9876
    port: 443
    protocol: TCP
    targetPort: 9876
  selector:
    app: machine-controller-webhook
  type: ClusterIP
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: machine-controller
  namespace: kube-system
  labels:
    local-testing: "true"
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: Role
metadata:
  name: machine-controller
  namespace: kube-system
  labels:
    local-testing: "true"
rules:
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - create
  - update
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - endpoints
  resourceNames:
  - machine-controller
  verbs:
  - "*"
- apiGroups:
  - ""
  resources:
  - endpoints
  verbs:
  - create
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: Role
metadata:
  name: machine-controller
  namespace: kube-public
  labels:
    local-testing: "true"
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - watch
  - list
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: Role
metadata:
  name: machine-controller
  namespace: default
  labels:
    local-testing: "true"
rules:
- apiGroups:
  - ""
  resources:
  - endpoints
  verbs:
  - get
  - watch
  - list
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: RoleBinding
metadata:
  name: machine-controller
  namespace: kube-system
  labels:
    local-testing: "true"
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: machine-controller
subjects:
- kind: ServiceAccount
  name: machine-controller
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: RoleBinding
metadata:
  name: machine-controller
  namespace: kube-public
  labels:
    local-testing: "true"
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: machine-controller
subjects:
- kind: ServiceAccount
  name: machine-controller
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: RoleBinding
metadata:
  name: machine-controller
  namespace: default
  labels:
    local-testing: "true"
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: machine-controller
subjects:
- kind: ServiceAccount
  name: machine-controller
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRole
metadata:
  name: machine-controller
  labels:
    local-testing: "true"
rules:
- apiGroups:
  - ""
  resources:
  - "events"
  verbs:
  - "create"
  - "patch"
- apiGroups:
  - "apiextensions.k8s.io"
  resources:
  - "customresourcedefinitions"
  verbs:
  - "create"
  - "get"
  - "list"
  - "watch"
- apiGroups:
  - "apiextensions.k8s.io"
  resources:
  - "customresourcedefinitions"
  resourceNames:
  - "machines.machine.k8s.io"
  verbs:
  - "*"
- apiGroups:
  - "machine.k8s.io"
  resources:
  - "machines"
  verbs:
  - "*"
- apiGroups:
  - "cluster.k8s.io"
  resources:
  - "machines"
  - "machinesets"
  - "machinesets/status"
  - "machinedeployments"
  - "machinedeployments/status"
  - "clusters"
  - "clusters/status"
  verbs:
  - '*'
- apiGroups:
  - ""
  resources:
  - "nodes"
  verbs:
  - "*"
# Pods are required for draining
# PVs are required for vsphere to detach them prior to deleting the instance
# Secrets and configmaps are needed for the boostrap token creation and when a ref is used for a
# value in the machineSpec
- apiGroups:
  - ""
  resources:
  - "pods"
  verbs:
  - "list"
  - "get"
- apiGroups:
  - ""
  resources:
  - "persistentvolumes"
  - "secrets"
  - "configmaps"
  verbs:
  - "list"
  - "get"
  - "watch"
- apiGroups:
  - ""
  resources:
  - "pods/eviction"
  verbs:
  - "create"
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRoleBinding
metadata:
  name: machine-controller
  labels:
    local-testing: "true"
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: machine-controller
subjects:
  - kind: ServiceAccount
    name: machine-controller
    namespace: kube-system
---
apiVersion: admissionregistration.k8s.io/v1beta1
kind: MutatingWebhookConfiguration
metadata:
  name: machinedeployments.machine-controller.kubermatic.io
webhooks:
- name: machinedeployments.machine-controller.kubermatic.io
  failurePolicy: Fail
  rules:
  - apiGroups:
    - "cluster.k8s.io"
    apiVersions:
    - v1alpha1
    operations:
    - CREATE
    - UPDATE
    resources:
    - machinedeployments
  clientConfig:
    service:
      namespace: kube-system
      name: machine-controller-webhook
      path: /machinedeployments
    caBundle: __admission_ca_cert__
- name: machines.machine-controller.kubermatic.io
  failurePolicy: Fail
  rules:
  - apiGroups:
    - "cluster.k8s.io"
    apiVersions:
    - v1alpha1
    operations:
    - CREATE
    - UPDATE
    resources:
    - machines
  clientConfig:
    service:
      namespace: kube-system
      name: machine-controller-webhook
      path: /machines
    caBundle: __admission_ca_cert__
