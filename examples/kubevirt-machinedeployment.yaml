apiVersion: "cluster.k8s.io/v1alpha1"
kind: MachineDeployment
metadata:
  name: my-kubevirt-machine
  namespace: kube-system
spec:
  paused: false
  replicas: 1
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  minReadySeconds: 0
  selector:
    matchLabels:
      name: foo
  template:
    metadata:
      labels:
        name: foo
    spec:
      providerSpec:
        value:
          sshPublicKeys:
            - "<< YOUR_PUBLIC_KEY >>"
          cloudProvider: "kubevirt"
          cloudProviderSpec:
            clusterName: cluster-name
            auth:
              kubeconfig:
                # Can also be set via the env var 'KUBEVIRT_KUBECONFIG' on the machine-controller.
                # If instead specified directly, this value should be a base64 encoded kubeconfig.
                value: "<< KUBECONFIG_BASE64 >>"
            virtualMachine:
              instancetype:
                name: "standard-2"
                kind: "VirtualMachineInstancetype" # Allowed values: "VirtualMachineInstancetype"/"VirtualMachineClusterInstancetype"
              preference:
                name: "sockets-advantage"
                kind: "VirtualMachinePreference" # Allowed values: "VirtualMachinePreference"/"VirtualMachineClusterPreference"
              template:
                cpus: "1"
                memory: "2048M"
                primaryDisk:
                  osImage: http://10.109.79.210/<< OS_NAME >>.img
                  size: "10Gi"
                  storageClassName: kubermatic-fast
            affinity:
              nodeAffinityPreset:
                type: "" # Allowed values: "", "soft", "hard"
                key: "foo"
                values:
                  - bar
            topologySpreadConstraints:
              - maxSkew: "1"
                topologyKey: "kubernetes.io/hostname"
                whenUnsatisfiable: "" # Allowed values: "DoNotSchedule", "ScheduleAnyway"
          # Can also be `centos`, must align with he configured registryImage above
          operatingSystem: "ubuntu"
          operatingSystemSpec:
            distUpgradeOnBoot: false
            disableAutoUpdate: true
            # 'rhelSubscriptionManagerUser' is only used for rhel os and can be set via env var `RHEL_SUBSCRIPTION_MANAGER_USER`
            rhelSubscriptionManagerUser: "<< RHEL_SUBSCRIPTION_MANAGER_USER >>"
            # 'rhelSubscriptionManagerPassword' is only used for rhel os and can be set via env var `RHEL_SUBSCRIPTION_MANAGER_PASSWORD`
            rhelSubscriptionManagerPassword: "<< RHEL_SUBSCRIPTION_MANAGER_PASSWORD >>"
            # 'rhsmOfflineToken' if it was provided red hat systems subscriptions will be removed upon machines deletions, and if wasn't
            # provided the rhsm will be disabled and any created subscription won't be removed automatically
            rhsmOfflineToken: "<< REDHAT_SUBSCRIPTIONS_OFFLINE_TOKEN >>"
      versions:
        kubelet: 1.28.5
