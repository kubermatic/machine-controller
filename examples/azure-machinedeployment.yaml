apiVersion: v1
kind: Secret
metadata:
  name: machine-controller-azure
  namespace: kube-system
type: Opaque
stringData:
  tenantID: "<< AZURE_TENANT_ID >>"
  clientID: "<< AZURE_CLIENT_ID >>"
  clientSecret: "<< AZURE_CLIENT_SECRET >>"
  subscriptionID: "<< AZURE_SUBSCRIPTION_ID >>"
---
apiVersion: "cluster.k8s.io/v1alpha1"
kind: MachineDeployment
metadata:
  name: azure-machinedeployment
  namespace: kube-system
spec:
  paused: false
  replicas: 1
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  minReadySeconds: 0
  selector:
    matchLabels:
      foo: bar
  template:
    metadata:
      labels:
        foo: bar
    spec:
      providerSpec:
        value:
          sshPublicKeys:
            - "<< YOUR_PUBLIC_KEY >>"
          cloudProvider: "azure"
          cloudProviderSpec:
            # Can also be set via the env var 'AZURE_TENANT_ID' on the machine-controller
            tenantID:
              secretKeyRef:
                namespace: kube-system
                name: machine-controller-azure
                key: tenantID
            # Can also be set via the env var 'AZURE_CLIENT_ID' on the machine-controller
            clientID:
              secretKeyRef:
                namespace: kube-system
                name: machine-controller-azure
                key: clientID
            # Can also be set via the env var 'AZURE_CLIENT_SECRET' on the machine-controller
            clientSecret:
              secretKeyRef:
                namespace: kube-system
                name: machine-controller-azure
                key: clientSecret
            # Can also be set via the env var 'AZURE_SUBSCRIPTION_ID' on the machine-controller
            subscriptionID:
              secretKeyRef:
                namespace: kube-system
                name: machine-controller-azure
                key: subscriptionID
            location: "westeurope"
            resourceGroup: "<< YOUR_RESOURCE_GROUP >>"
            vnetResourceGroup: "<< YOUR_VNET_RESOURCE_GROUP >>"
            vmSize: "Standard_F2"
            # optional disk size values in GB. If not set, the defaults for the vmSize will be used.
            osDiskSize: 30
            dataDiskSize: 30
            vnetName: "<< VNET_NAME >>"
            subnetName: "<< SUBNET_NAME >>"
            routeTableName: "<< ROUTE_TABLE_NAME >>"
            imageID: "myImageID"
            assignPublicIP: false
            securityGroupName: my-security-group
            # zones is an optional field and it represents Availability Zones is a high-availability offering
            # that protects your applications and data from datacenter failures.
            zones:
              - "1"
          # Can be 'ubuntu', 'coreos' ,'centos' or 'rhel'
          operatingSystem: "coreos"
          operatingSystemSpec:
            distUpgradeOnBoot: false
            disableAutoUpdate: true
            # 'rhelSubscriptionManagerUser' is only used for rhel os and can be set via env var `RHEL_SUBSCRIPTION_MANAGER_USER`
            rhelSubscriptionManagerUser: "<< RHEL_SUBSCRIPTION_MANAGER_USER >>"
            # 'rhelSubscriptionManagerPassword' is only used for rhel os and can be set via env var `RHEL_SUBSCRIPTION_MANAGER_PASSWORD`
            rhelSubscriptionManagerPassword: "<< RHEL_SUBSCRIPTION_MANAGER_PASSWORD >>"
            # 'rhsmOfflineToken' if it was provided red hat systems subscriptions will be removed upon machines deletions, and if wasn't
            # provided the rhsm will be disabled and any created subscription won't be removed automatically
            rhsmOfflineToken: "<< REDHAT_SUBSCRIPTIONS_OFFLINE_TOKEN >>"
      versions:
        kubelet: 1.9.6
