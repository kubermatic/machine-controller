apiVersion: v1
kind: Secret
metadata:
  # If you change the namespace/name, you must also
  # adjust the rbac rules
  name: machine-controller-aws
  namespace: kube-system
type: Opaque
stringData:
  accessKeyId: << AWS_ACCESS_KEY_ID >>
  secretAccessKey: << AWS_SECRET_ACCESS_KEY >>
---
apiVersion: "cluster.k8s.io/v1alpha1"
kind: MachineDeployment
metadata:
  name: aws-machinedeployment
  namespace: kube-system
spec:
  paused: false
  replicas: 1
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  minReadySeconds: 0
  selector:
    matchLabels:
      foo: bar
  template:
    metadata:
      labels:
        foo: bar
    spec:
      providerSpec:
        value:
          sshPublicKeys:
            - "<< YOUR_PUBLIC_KEY >>"
          cloudProvider: "aws"
          cloudProviderSpec:
          # If empty, can be set via AWS_ACCESS_KEY_ID env var
            accessKeyId:
              secretKeyRef:
                namespace: kube-system
                name: machine-controller-aws
                key: accessKeyId
          # If empty, can be set via AWS_SECRET_ACCESS_KEY env var
            secretAccessKey:
              secretKeyRef:
                namespace: kube-system
                name: machine-controller-aws
                key: secretAccessKey
            region: "eu-central-1"
            availabilityZone: "eu-central-1a"
            vpcId: "vpc-819f62e9"
            subnetId: "subnet-2bff4f43"
            instanceType: "t2.micro"
            instanceProfile: "kubernetes-v1"
            isSpotInstance: false
            diskSize: 50
            diskType: "gp2"
            ebsVolumeEncrypted: false
            ami: "my-custom-ami"
            ## Only application if diskType = io1
            diskIops: 500
            # Assign a public IP to this instance. Default: true
            assignPublicIP: false
            tags:
              "KubernetesCluster": "6qsm86c2d"
          # Can be 'ubuntu', 'centos', `rhel` or 'sles'
          operatingSystem: "ubuntu"
          operatingSystemSpec:
            disableAutoUpdate: true
            distUpgradeOnBoot: false
            # 'rhelSubscriptionManagerUser' is only used for rhel os and can be set via env var `RHEL_SUBSCRIPTION_MANAGER_USER`
            rhelSubscriptionManagerUser: "<< RHEL_SUBSCRIPTION_MANAGER_USER >>"
            # 'rhelSubscriptionManagerPassword' is only used for rhel os and can be set via env var `RHEL_SUBSCRIPTION_MANAGER_PASSWORD`
            rhelSubscriptionManagerPassword: "<< RHEL_SUBSCRIPTION_MANAGER_PASSWORD >>"
            # 'rhsmOfflineToken' if it was provided red hat systems subscriptions will be removed upon machines deletions, and if wasn't
            # provided the rhsm will be disabled and any created subscription won't be removed automatically
            rhsmOfflineToken: "<< REDHAT_SUBSCRIPTIONS_OFFLINE_TOKEN >>"
      versions:
        kubelet: 1.9.6
