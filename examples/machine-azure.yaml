apiVersion: v1
kind: Secret
metadata:
  name: machine-controller-azure
  namespace: kube-system
type: Opaque
stringData:
  tenantID: "<< AZURE_TENANT_ID >>"
  clientID: "<< AZURE_CLIENT_ID >>"
  clientSecret: "<< AZURE_CLIENT_SECRET >>"
  subscriptionID: "<< AZURE_SUBSCRIPTION_ID >>"
---
apiVersion: "machine.k8s.io/v1alpha1"
kind: Machine
metadata:
  name: machine1
spec:
  metadata:
    name: node1
    labels:
      foo: "bar"
  providerConfig:
    sshPublicKeys:
      - "<< YOUR_PUBLIC_KEY >>"
    cloudProvider: "azure"
    cloudProviderSpec:
      tenantID:
        secretKeyRef:
          namespace: kube-system
          name: machine-controller-azure
          key: tenantID
      clientID:
        secretKeyRef:
          namespace: kube-system
          name: machine-controller-azure
          key: clientID
      clientSecret:
        secretKeyRef:
          namespace: kube-system
          name: machine-controller-azure
          key: clientSecret
      subscriptionID:
        secretKeyRef:
          namespace: kube-system
          name: machine-controller-azure
          key: subscriptionID
      location: "westeurope"
      resourceGroup: "<< YOUR_RESOURCE_GROUP >>"
      vmSize: "Standard_B1ms"
      vnetName: "<< VNET_NAME >>"
      subnetName: "<< SUBNET_NAME >>"
      routeTableName: "<< ROUTE_TABLE_NAME >>"
      assignPublicIP: false
    operatingSystem: "coreos"
    operatingSystemSpec:
      distUpgradeOnBoot: false
  roles:
  - "Node"
  versions:
    kubelet: "v1.10.2"
    containerRuntime:
      # If you are using Ubuntu, you may choose 'cri-o' instead
      name: "docker"
