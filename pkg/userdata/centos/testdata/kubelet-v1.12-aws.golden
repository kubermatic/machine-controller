#cloud-config
hostname: node1

ssh_pwauth: no

write_files:
- path: "/etc/systemd/journald.conf.d/max_disk_use.conf"
  content: |
    [Journal]
    SystemMaxUse=5G

- path: "/etc/sysctl.d/k8s.conf"
  content: |
    net.bridge.bridge-nf-call-ip6tables = 1
    net.bridge.bridge-nf-call-iptables = 1
    kernel.panic_on_oops = 1
    kernel.panic = 10
    vm.overcommit_memory = 1

- path: "/etc/yum.repos.d/kubernetes.repo"
  content: |
    [kubernetes]
    name=Kubernetes
    baseurl=https://packages.cloud.google.com/yum/repos/kubernetes-el7-$basearch
    enabled=1
    gpgcheck=1
    repo_gpgcheck=1
    gpgkey=https://packages.cloud.google.com/yum/doc/yum-key.gpg https://packages.cloud.google.com/yum/doc/rpm-package-key.gpg

- path: /etc/sysconfig/selinux
  content: |
    # This file controls the state of SELinux on the system.
    # SELINUX= can take one of these three values:
    #     enforcing - SELinux security policy is enforced.
    #     permissive - SELinux prints warnings instead of enforcing.
    #     disabled - No SELinux policy is loaded.
    SELINUX=permissive
    # SELINUXTYPE= can take one of three two values:
    #     targeted - Targeted processes are protected,
    #     minimum - Modification of targeted policy. Only selected processes are protected.
    #     mls - Multi Level Security protection.
    SELINUXTYPE=targeted

- path: "/etc/sysconfig/kubelet-overwrite"
  content: |
    KUBELET_DNS_ARGS=
    KUBELET_EXTRA_ARGS=--authentication-token-webhook=true \
      --cloud-provider=aws \
      --cloud-config=/etc/kubernetes/cloud-config \
      --hostname-override=node1 \
      --read-only-port=0 \
      --protect-kernel-defaults=true \
      --cluster-dns= \
      --cluster-domain=cluster.local

- path: "/etc/kubernetes/cloud-config"
  content: |
    {aws-config:true}

- path: "/usr/local/bin/setup"
  permissions: "0755"
  content: |
    #!/bin/bash
    set -xeuo pipefail
    setenforce 0 || true
    sysctl --system

    yum install -y docker-1.13.1 \
      kubelet-1.12.0 \
      kubeadm-1.12.0 \
      ebtables \
      ethtool \
      nfs-utils \
      bash-completion \
      sudo

    cp /etc/sysconfig/kubelet-overwrite /etc/sysconfig/kubelet

    systemctl enable --now docker
    systemctl enable --now kubelet

    if [[ ! -x /usr/local/bin/health-monitor.sh ]]; then
      curl -Lfo /usr/local/bin/health-monitor.sh \
        https://raw.githubusercontent.com/kubermatic/machine-controller/8b5b66e4910a6228dfaecccaa0a3b05ec4902f8e/pkg/userdata/scripts/health-monitor.sh
      chmod +x /usr/local/bin/health-monitor.sh
    fi

    if ! [[ -e /etc/kubernetes/pki/ca.crt ]]; then
      kubeadm join \
        --token my-token \
        --discovery-token-ca-cert-hash sha256:6caecce9fedcb55d4953d61a27dc6997361a2f226ad86d7e6004dde7526fc4b1 \
        --ignore-preflight-errors=CRI \
        server:443
    fi

    if [[ ! -x /usr/local/bin/health-monitor.sh ]]; then
      curl -Lfo /usr/local/bin/health-monitor.sh \
        https://raw.githubusercontent.com/kubermatic/machine-controller/8b5b66e4910a6228dfaecccaa0a3b05ec4902f8e/pkg/userdata/scripts/health-monitor.sh
      chmod +x /usr/local/bin/health-monitor.sh
    fi

    systemctl enable --now --no-block kubelet-healthcheck.service
    systemctl enable --now --no-block docker-healthcheck.service

- path: "/usr/local/bin/supervise.sh"
  permissions: "0755"
  content: |
    #!/bin/bash
    set -xeuo pipefail
    while ! "$@"; do
      sleep 1
    done

- path: "/etc/systemd/system/setup.service"
  content: |
    [Install]
    WantedBy=multi-user.target

    [Unit]
    Requires=network-online.target
    After=network-online.target

    [Service]
    Type=oneshot
    RemainAfterExit=true
    ExecStart=/usr/local/bin/supervise.sh /usr/local/bin/setup

- path: /etc/systemd/system/kubelet-healthcheck.service
  permissions: "0644"
  content: |
    [Unit]
    Requires=kubelet.service
    After=kubelet.service

    [Service]
    ExecStart=/usr/local/bin/health-monitor.sh kubelet

    [Install]
    WantedBy=multi-user.target

- path: /etc/systemd/system/docker-healthcheck.service
  permissions: "0644"
  content: |
    [Unit]
    Requires=docker.service
    After=docker.service

    [Service]
    ExecStart=/usr/local/bin/health-monitor.sh container-runtime

    [Install]
    WantedBy=multi-user.target

runcmd:
- systemctl enable --now setup.service
